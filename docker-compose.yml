version: "3.9"
name: devops-ai

services:
  db:
    image: postgres:16
    container_name: devops-ai-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./docker/db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: src/app/api/Dockerfile
    container_name: devops-ai-api
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      LLM_PROVIDER: ${LLM_PROVIDER}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL}
      OLLAMA_MODEL: ${OLLAMA_MODEL}
      DATABASE_URL: ${DATABASE_URL}
      DATABASE__POSTGRES_DSN: ${DATABASE__POSTGRES_DSN}
      AUDIT_DB_URL: ${AUDIT_DB_URL}
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "uvicorn app.api.main:app --host ${API_HOST} --port ${API_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:${API_PORT}/api/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40

  mcp:
    build:
      context: .
      dockerfile: src/app/api/Dockerfile
    container_name: devops-ai-mcp
    environment:
      MCP_TRANSPORT: ${MCP_TRANSPORT}
      DATABASE_URL: ${DATABASE_URL}
      AUDIT_DB_URL: ${AUDIT_DB_URL}
      MEMORY_DB_URL: ${MEMORY_DB_URL}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL}
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python -m app.mcp.server"

  ollama:
    image: ollama/ollama:latest
    container_name: devops-ai-ollama
    ports:
      - "${OLLAMA_PORT}:11434"
    volumes:
      - ollama:/root/.ollama

volumes:
  dbdata: {}
  ollama: {}
