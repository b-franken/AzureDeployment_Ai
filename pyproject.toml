[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "devops-ai"
version = "0.1.0"
description = "Azure Copilot / DevOps AI assistant with a FastAPI backend and optional Streamlit UI."
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Bas Franken", email = "basfrankenn@gmail.com" }]
keywords = ["devops", "fastapi", "streamlit", "azure", "ai", "llm"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Internet"
]
dependencies = [
  "asyncpg==0.30.0",
  "azure-identity==1.24.0",
  "azure-keyvault-secrets==4.10.0",
  "azure-mgmt-apimanagement==5.0.0",
  "azure-mgmt-applicationinsights==4.1.0",
  "azure-mgmt-authorization==4.0.0",
  "azure-mgmt-automation==1.0.0",
  "azure-mgmt-cognitiveservices==13.7.0",
  "azure-mgmt-compute==35.0.0",
  "azure-mgmt-containerregistry==14.0.0",
  "azure-mgmt-containerservice==39.0.0",
  "azure-mgmt-cosmosdb==9.8.0",
  "azure-mgmt-costmanagement==4.0.1",
  "azure-mgmt-datafactory==9.2.0",
  "azure-mgmt-eventgrid==10.4.0",
  "azure-mgmt-eventhub==11.2.0",
  "azure-mgmt-frontdoor==1.2.0",
  "azure-mgmt-keyvault==12.0.0",
  "azure-mgmt-loganalytics==12.0.0",
  "azure-mgmt-logic==10.0.0",
  "azure-mgmt-monitor==7.0.0",
  "azure-mgmt-msi==7.1.0",
  "azure-mgmt-network==29.0.0",
  "azure-mgmt-privatedns==1.2.0",
  "azure-mgmt-recoveryservices==3.1.0",
  "azure-mgmt-recoveryservicesbackup==9.2.0",
  "azure-mgmt-redis==14.5.0",
  "azure-mgmt-resource==24.0.0",
  "azure-mgmt-resourcegraph==8.0.0",
  "azure-mgmt-servicebus==9.0.0",
  "azure-mgmt-sql==3.0.1",
  "azure-mgmt-storage==23.0.1",
  "azure-mgmt-subscription==3.1.1",
  "azure-mgmt-synapse==2.0.0",
  "azure-mgmt-trafficmanager==1.1.0",
  "azure-mgmt-web==9.0.0",
  "azure-mgmt-consumption==10.0.0",
  "azure-monitor-opentelemetry==1.6.13",
  "azure-storage-blob==12.26.0",
  "azure-storage-file-share==12.22.0",
  "cryptography==45.0.6",
  "fastapi==0.116.1",
  "httpx==0.27.0",
  "mcp==1.12.4",
  "mcp-server==0.1.4",
  "numpy==2.3.2",
  "openai==1.40.6",
  "opentelemetry-instrumentation-asyncpg==0.57b0",
  "opentelemetry-instrumentation-asgi==0.57b0",
  "opentelemetry-instrumentation-fastapi==0.57b0",
  "opentelemetry-instrumentation-httpx==0.57b0",
  "opentelemetry-instrumentation-redis==0.57b0",
  "prometheus-client==0.20.0",
  "pydantic==2.11.7",
  "pydantic-settings==2.10.1",
  "python-dotenv==1.1.1",
  "redis==6.4.0",
  "sentence-transformers==5.1.0",
  "structlog==24.4.0",
  "torch==2.8.0",
  "uvicorn[standard]==0.35.0",
  "PyJWT==2.10.1",
]

[project.urls]
Repository = "https://github.com/b-franken/AzureDeployment_Ai"

[project.optional-dependencies]
dev = [
  "black>=24.0",
  "ruff>=0.5.0",
  "mypy>=1.10.0",
  "pytest>=8.0.0",
  "pytest-asyncio>=0.23.0",
  "pytest-cov>=5.0.0",
  "types-requests",
  "types-PyYAML",
  "coverage>=7.6.0",
  "build>=1.2.1",
  "wheel>=0.43.0",
  "pip>=24.0"
]
nlp = [
  "torch==2.8.0",
  "sentence-transformers==5.1.0"
]

[project.scripts]
devops-ai = "app.api.__main__:main"
devops-ai-mcp = "app.mcp.server:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
target-version = ["py312"]
line-length = 100
exclude = """
/(
  \\.venv
 |venv
 |build
 |dist
 |__pycache__
)/
"""

[tool.ruff]
line-length = 100
target-version = "py312"
src = ["src"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
ignore = ["E203"]

[tool.ruff.lint.isort]
known-first-party = ["app", "ai", "bot", "kb", "memory", "tools", "workflows"]

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
pretty = true
show_error_codes = true
exclude = "(build|dist|\\.venv|venv|__pycache__)"
files = ["src"]

[tool.pytest.ini_options]
minversion = "8.0"
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "-ra --cov=src --cov-report=xml --cov-report=term-missing --junitxml=reports/junit.xml"

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["*/__init__.py", "*/tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80
