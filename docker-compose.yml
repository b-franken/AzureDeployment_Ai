version: "3.9"
name: devops-ai
services:
  db:
    image: postgres:16
    container_name: devops-ai-db
    environment:
      POSTGRES_DB: devops_ai
      POSTGRES_USER: devops_ai
      POSTGRES_PASSWORD: devpassword
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./docker/db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devops_ai -d devops_ai"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: src/app/api/Dockerfile
    container_name: devops-ai-api
    environment:
      ENVIRONMENT: development
      API_HOST: 0.0.0.0
      API_PORT: "8000"
      LLM_PROVIDER: ollama
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_MODEL: llama3.1
      DATABASE_URL: postgresql://devops_ai:devpassword@db:5432/devops_ai
      DATABASE__POSTGRES_DSN: postgresql+asyncpg://devops_ai:devpassword@db:5432/devops_ai
      AUDIT_DB_URL: postgresql://devops_ai:devpassword@db:5432/devops_ai
      MEMORY_DB_URL: postgresql://devops_ai:devpassword@db:5432/devops_ai
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "uvicorn app.api.main:app --host 0.0.0.0 --port 8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/api/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40

  mcp:
    build:
      context: .
      dockerfile: src/app/api/Dockerfile
    container_name: devops-ai-mcp
    environment:
      MCP_TRANSPORT: stdio
      DATABASE_URL: postgresql://devops_ai:devpassword@db:5432/devops_ai
      AUDIT_DB_URL: postgresql://devops_ai:devpassword@db:5432/devops_ai
      MEMORY_DB_URL: postgresql://devops_ai:devpassword@db:5432/devops_ai
      OLLAMA_BASE_URL: http://ollama:11434
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python -m app.mcp.server"

  ollama:
    image: ollama/ollama:latest
    container_name: devops-ai-ollama
    ports:
      - "11435:11434"
    volumes:
      - ollama:/root/.ollama

volumes:
  dbdata: {}
  ollama: {}
