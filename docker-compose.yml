name: devops-ai

services:
  db:
    image: postgres:16
    container_name: devops-ai-db
    env_file: .env
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./docker/db/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped
    networks:
      - devops-ai-net

  ollama:
    image: ollama/ollama:latest
    container_name: devops-ai-ollama
    env_file: .env
    volumes:
      - ollama:/root/.ollama
    expose:
      - "11434"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://127.0.0.1:11434/api/tags"]
      interval: 5s
      timeout: 3s
      retries: 40
    restart: unless-stopped
    networks:
      devops-ai-net:
        aliases:
          - ollama

  api:
    build:
      context: .
      dockerfile: src/app/api/Dockerfile
    container_name: devops-ai-api
    env_file: .env
    environment:
      PYTHONWARNINGS: ignore::SyntaxWarning
      AZURE_LOG_LEVEL: warning
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      APPLICATIONINSIGHTS_CONNECTION_STRING: ${APPLICATIONINSIGHTS_CONNECTION_STRING}
      OLLAMA_BASE_URL: http://devops-ai-ollama:11434
      LLM__OLLAMA__BASE_URL: http://devops-ai-ollama:11434
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    command: >
      sh -c "uvicorn app.api.main:app --host ${API_HOST} --port ${API_PORT} --workers 2"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:${API_PORT}${API_PREFIX}/health || exit 1"]
    restart: unless-stopped
    networks:
      - devops-ai-net

  mcp:
    build:
      context: .
      dockerfile: src/app/api/Dockerfile
    container_name: devops-ai-mcp
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python -m app.mcp.server"
    restart: unless-stopped
    networks:
      - devops-ai-net

volumes:
  dbdata: {}
  ollama: {}

networks:
  devops-ai-net: {}
